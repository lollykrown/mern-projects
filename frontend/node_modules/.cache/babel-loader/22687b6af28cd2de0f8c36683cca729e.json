{"ast":null,"code":"import axios from 'axios';\nexport const timeSince = timestamp => {\n  const seconds = Math.floor((new Date() - new Date(timestamp)) / 1000);\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n\n  interval = Math.floor(seconds / 2592000);\n\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n\n  interval = Math.floor(seconds / 86400);\n\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n\n  interval = Math.floor(seconds / 3600);\n\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n\n  interval = Math.floor(seconds / 60);\n\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n\n  return Math.floor(seconds) + \" seconds\";\n};\nexport const client = (endpoint, {\n  body,\n  ...customConfig\n} = {}) => {\n  const token = localStorage.getItem(\"token\");\n  const headers = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n\n  const config = {\n    method: body ? \"POST\" : \"GET\",\n    ...customConfig,\n    headers: { ...headers,\n      ...customConfig.headers\n    }\n  };\n\n  if (body) {\n    config.body = JSON.stringify(body);\n  }\n\n  return fetch(`${process.env.REACT_APP_BACKEND_URL}${endpoint}`, config).then(async res => {\n    const data = await res.json();\n\n    if (res.ok) {\n      return data;\n    } else {\n      return Promise.reject(data);\n    }\n  });\n};\nexport const uploadImage = file => {\n  const data = new FormData();\n  data.append(\"file\", file);\n  data.append(\"upload_preset\", \"instaclone\");\n  return axios.post(process.env.REACT_APP_CLOUDINARY_URL, data); //).then((res) => res.json());\n};","map":{"version":3,"sources":["/Users/sayconfirmproductionsltd/Documents/GitHub/mern-projects/frontend/src/utils/index.js"],"names":["axios","timeSince","timestamp","seconds","Math","floor","Date","interval","client","endpoint","body","customConfig","token","localStorage","getItem","headers","Authorization","config","method","JSON","stringify","fetch","process","env","REACT_APP_BACKEND_URL","then","res","data","json","ok","Promise","reject","uploadImage","file","FormData","append","post","REACT_APP_CLOUDINARY_URL"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const timeSince = (timestamp) => {\n  const seconds = Math.floor((new Date() - new Date(timestamp)) / 1000);\n\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n\n  return Math.floor(seconds) + \" seconds\";\n};\n\nexport const client = (endpoint, { body, ...customConfig } = {}) => {\n  const token = localStorage.getItem(\"token\");\n  const headers = { \"Content-Type\": \"application/json\" };\n\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n\n  const config = {\n    method: body ? \"POST\" : \"GET\",\n    ...customConfig,\n    headers: {\n      ...headers,\n      ...customConfig.headers,\n    },\n  };\n\n  if (body) {\n    config.body = JSON.stringify(body);\n  }\n\n  return fetch(`${process.env.REACT_APP_BACKEND_URL}${endpoint}`, config).then(\n    async (res) => {\n      const data = await res.json();\n\n      if (res.ok) {\n        return data;\n      } else {\n        return Promise.reject(data);\n      }\n    }\n  );\n};\n\nexport const uploadImage = (file) => {\n  const data = new FormData();\n  data.append(\"file\", file);\n  data.append(\"upload_preset\", \"instaclone\");\n\n  return axios.post(process.env.REACT_APP_CLOUDINARY_URL, data)\n  //).then((res) => res.json());\n};\n"]},"metadata":{},"sourceType":"module"}