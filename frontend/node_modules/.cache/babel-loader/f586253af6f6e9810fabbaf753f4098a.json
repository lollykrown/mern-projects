{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sayconfirmproductionsltd/Documents/GitHub/mern-projects/frontend/src/components/LikePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { HeartIcon, FilledHeartIcon } from \"./Icons\";\nimport axios from 'axios';\nimport Axios from '../utils/axios';\nimport { toast } from \"react-toastify\";\n\nconst LikePost = ({\n  isLiked,\n  postId,\n  incLikes,\n  decLikes\n}) => {\n  _s();\n\n  const [likedState, setLiked] = useState(isLiked);\n  const CancelToken = axios.CancelToken;\n  const source = CancelToken.source();\n  useEffect(() => {\n    setLiked(isLiked);\n  }, [isLiked]);\n\n  const handleRequest = async action => {\n    try {\n      const res = await Axios.get(`/posts/${postId}/${action}`, {\n        cancelToken: source.token\n      });\n    } catch (err) {\n      if (axios.isCancel(err)) {\n        console.log('Get request canceled');\n        toast.error(err.message);\n      } else {\n        console.log(err);\n        toast.error(err.message);\n      }\n    }\n\n    return () => {\n      source.cancel('Operation canceled by the user.');\n    };\n  };\n\n  const handleToggleLike = () => {\n    if (likedState) {\n      setLiked(false);\n      decLikes();\n      handleRequest('toggleLike');\n    } else {\n      setLiked(true);\n      incLikes();\n      handleRequest('toggleLike');\n    }\n  };\n\n  if (likedState) {\n    return /*#__PURE__*/_jsxDEV(FilledHeartIcon, {\n      onClick: handleToggleLike\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!likedState) {\n    return /*#__PURE__*/_jsxDEV(HeartIcon, {\n      onClick: handleToggleLike\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(LikePost, \"hGoG4VT6Fco+zpnHyX+V9EO7eVY=\");\n\n_c = LikePost;\nexport default LikePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"LikePost\");","map":{"version":3,"sources":["/Users/sayconfirmproductionsltd/Documents/GitHub/mern-projects/frontend/src/components/LikePost.js"],"names":["React","useEffect","useState","HeartIcon","FilledHeartIcon","axios","Axios","toast","LikePost","isLiked","postId","incLikes","decLikes","likedState","setLiked","CancelToken","source","handleRequest","action","res","get","cancelToken","token","err","isCancel","console","log","error","message","cancel","handleToggleLike"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,SAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AAAA;;AAC5D,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBZ,QAAQ,CAACO,OAAD,CAAvC;AAEA,QAAMM,WAAW,GAAGV,KAAK,CAACU,WAA1B;AACA,QAAMC,MAAM,GAAGD,WAAW,CAACC,MAAZ,EAAf;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACL,OAAD,CAAR;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMQ,aAAa,GAAG,MAAOC,MAAP,IAAkB;AACtC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,UAASV,MAAO,IAAGQ,MAAO,EAArC,EAAwC;AACxDG,QAAAA,WAAW,EAAEL,MAAM,CAACM;AADoC,OAAxC,CAAlB;AAGD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZ,UAAIlB,KAAK,CAACmB,QAAN,CAAeD,GAAf,CAAJ,EAAyB;AACvBE,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAnB,QAAAA,KAAK,CAACoB,KAAN,CAAYJ,GAAG,CAACK,OAAhB;AACD,OAHD,MAGO;AACLH,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAhB,QAAAA,KAAK,CAACoB,KAAN,CAAYJ,GAAG,CAACK,OAAhB;AACD;AACF;;AACD,WAAO,MAAM;AACXZ,MAAAA,MAAM,CAACa,MAAP,CAAc,iCAAd;AACD,KAFD;AAGD,GAjBD;;AAmBA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAIjB,UAAJ,EAAgB;AACdC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,QAAQ;AACRK,MAAAA,aAAa,CAAC,YAAD,CAAb;AACD,KAJD,MAIO;AACLH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAH,MAAAA,QAAQ;AACRM,MAAAA,aAAa,CAAC,YAAD,CAAb;AACD;AACF,GAVD;;AAYA,MAAIJ,UAAJ,EAAgB;AACd,wBAAO,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEiB;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACjB,UAAL,EAAiB;AACf,wBAAO,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEiB;AAApB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAhDD;;GAAMtB,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { HeartIcon, FilledHeartIcon } from \"./Icons\";\nimport axios from 'axios';\nimport Axios from '../utils/axios'\nimport { toast } from \"react-toastify\";\n\nconst LikePost = ({ isLiked, postId, incLikes, decLikes }) => {\n  const [likedState, setLiked] = useState(isLiked);\n\n  const CancelToken = axios.CancelToken;\n  const source = CancelToken.source();\n\n  useEffect(() => {\n    setLiked(isLiked);\n  }, [isLiked]);\n\n  const handleRequest = async (action) => {\n    try {\n      const res = await Axios.get(`/posts/${postId}/${action}`, {\n        cancelToken: source.token\n      })\n    } catch (err) {\n      if (axios.isCancel(err)) {\n        console.log('Get request canceled');\n        toast.error(err.message)\n      } else {\n        console.log(err)\n        toast.error(err.message)\n      }\n    }\n    return () => {\n      source.cancel('Operation canceled by the user.');\n    };\n  };\n\n  const handleToggleLike = () => {\n    if (likedState) {\n      setLiked(false);\n      decLikes();\n      handleRequest('toggleLike');\n    } else {\n      setLiked(true);\n      incLikes();\n      handleRequest('toggleLike');\n    }\n  };\n\n  if (likedState) {\n    return <FilledHeartIcon onClick={handleToggleLike} />;\n  }\n\n  if (!likedState) {\n    return <HeartIcon onClick={handleToggleLike} />;\n  }\n};\n\nexport default LikePost;\n"]},"metadata":{},"sourceType":"module"}