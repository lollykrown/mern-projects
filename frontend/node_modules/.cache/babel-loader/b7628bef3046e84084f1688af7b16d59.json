{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sayconfirmproductionsltd/Documents/GitHub/mern-projects/frontend/src/components/SavePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BookmarkIcon, FilledBookmarkIcon } from \"./Icons\";\nimport { toast } from \"react-toastify\";\nimport axios from 'axios';\nimport Axios from '../utils/axios';\n\nconst SavePost = ({\n  isSaved,\n  postId\n}) => {\n  _s();\n\n  const [savedState, setSaved] = useState(isSaved);\n  const CancelToken = axios.CancelToken;\n  const source = CancelToken.source();\n  useEffect(() => {\n    setSaved(isSaved);\n  }, [isSaved]);\n\n  const handleRequest = async id => {\n    try {\n      const res = await Axios.get(`/posts/${id}/toggleSave`, {\n        cancelToken: source.token\n      });\n      console.log(res);\n    } catch (err) {\n      if (axios.isCancel(err)) {\n        console.log('Get request canceled');\n        toast.error(err.message);\n      } else {\n        console.log(err);\n        toast.error(err.message);\n      }\n    }\n\n    return () => {\n      source.cancel('Operation canceled by the user.');\n    };\n  };\n\n  const handleToggleSave = () => {\n    if (savedState) {\n      setSaved(false);\n      handleRequest(postId);\n    } else {\n      setSaved(true);\n      handleRequest(postId);\n    }\n  };\n\n  if (savedState) {\n    return /*#__PURE__*/_jsxDEV(FilledBookmarkIcon, {\n      onClick: handleToggleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!savedState) {\n    return /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n      onClick: handleToggleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(SavePost, \"mGUULSMnpw+EKePMUThy2eSO7G8=\");\n\n_c = SavePost;\nexport default SavePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavePost\");","map":{"version":3,"sources":["/Users/sayconfirmproductionsltd/Documents/GitHub/mern-projects/frontend/src/components/SavePost.js"],"names":["React","useEffect","useState","BookmarkIcon","FilledBookmarkIcon","toast","axios","Axios","SavePost","isSaved","postId","savedState","setSaved","CancelToken","source","handleRequest","id","res","get","cancelToken","token","console","log","err","isCancel","error","message","cancel","handleToggleSave"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,SAAjD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AAAA;;AACxC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBV,QAAQ,CAACO,OAAD,CAAvC;AAEA,QAAMI,WAAW,GAAGP,KAAK,CAACO,WAA1B;AACA,QAAMC,MAAM,GAAGD,WAAW,CAACC,MAAZ,EAAf;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACH,OAAD,CAAR;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMM,aAAa,GAAG,MAAOC,EAAP,IAAc;AAClC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,UAASF,EAAG,aAAvB,EAAqC;AACrDG,QAAAA,WAAW,EAAEL,MAAM,CAACM;AADiC,OAArC,CAAlB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AAED,KAND,CAME,OAAOM,GAAP,EAAY;AACZ,UAAIjB,KAAK,CAACkB,QAAN,CAAeD,GAAf,CAAJ,EAAyB;AACvBF,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAjB,QAAAA,KAAK,CAACoB,KAAN,CAAYF,GAAG,CAACG,OAAhB;AACD,OAHD,MAGO;AACLL,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAlB,QAAAA,KAAK,CAACoB,KAAN,CAAYF,GAAG,CAACG,OAAhB;AACD;AACF;;AACD,WAAO,MAAM;AACXZ,MAAAA,MAAM,CAACa,MAAP,CAAc,iCAAd;AACD,KAFD;AAGD,GAnBD;;AAqBA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAIjB,UAAJ,EAAgB;AACdC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAG,MAAAA,aAAa,CAACL,MAAD,CAAb;AACD,KAHD,MAGO;AACLE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAG,MAAAA,aAAa,CAACL,MAAD,CAAb;AACD;AACF,GARD;;AAUA,MAAIC,UAAJ,EAAgB;AACd,wBAAO,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEiB;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACjB,UAAL,EAAiB;AACf,wBAAO,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEiB;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAhDD;;GAAMpB,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BookmarkIcon, FilledBookmarkIcon } from \"./Icons\";\nimport { toast } from \"react-toastify\";\nimport axios from 'axios';\nimport Axios from '../utils/axios'\n\nconst SavePost = ({ isSaved, postId }) => {\n  const [savedState, setSaved] = useState(isSaved);\n\n  const CancelToken = axios.CancelToken;\n  const source = CancelToken.source();\n\n  useEffect(() => {\n    setSaved(isSaved);\n  }, [isSaved]);\n\n  const handleRequest = async (id) => {\n    try {\n      const res = await Axios.get(`/posts/${id}/toggleSave`, {\n        cancelToken: source.token\n      })\n      console.log(res)\n\n    } catch (err) {\n      if (axios.isCancel(err)) {\n        console.log('Get request canceled');\n        toast.error(err.message)\n      } else {\n        console.log(err)\n        toast.error(err.message)\n      }\n    }\n    return () => {\n      source.cancel('Operation canceled by the user.');\n    };\n  }; \n\n  const handleToggleSave = () => {\n    if (savedState) {\n      setSaved(false);\n      handleRequest(postId)\n    } else {\n      setSaved(true);\n      handleRequest(postId)\n    }\n  };\n\n  if (savedState) {\n    return <FilledBookmarkIcon onClick={handleToggleSave} />;\n  }\n\n  if (!savedState) {\n    return <BookmarkIcon onClick={handleToggleSave} />;\n  }\n};\n\nexport default SavePost;\n"]},"metadata":{},"sourceType":"module"}